// Code generated by mockery v2.53.4. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// DecisionComment is an autogenerated mock type for the DecisionComment type
type DecisionComment struct {
	mock.Mock
}

// Comment provides a mock function with given fields: modelPath, id, title, author, comment
func (_m *DecisionComment) Comment(modelPath string, id string, title string, author string, comment string) error {
	ret := _m.Called(modelPath, id, title, author, comment)

	if len(ret) == 0 {
		panic("no return value specified for Comment")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(string, string, string, string, string) error); ok {
		r0 = rf(modelPath, id, title, author, comment)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewDecisionComment creates a new instance of DecisionComment. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewDecisionComment(t interface {
	mock.TestingT
	Cleanup(func())
}) *DecisionComment {
	mock := &DecisionComment{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
