// Code generated by mockery v2.53.4. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// DecisionEdit is an autogenerated mock type for the DecisionEdit type
type DecisionEdit struct {
	mock.Mock
}

// Edit provides a mock function with given fields: modelPath, id, title, question, options, criteria
func (_m *DecisionEdit) Edit(modelPath string, id string, title string, question *string, options *[]string, criteria *string) error {
	ret := _m.Called(modelPath, id, title, question, options, criteria)

	if len(ret) == 0 {
		panic("no return value specified for Edit")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(string, string, string, *string, *[]string, *string) error); ok {
		r0 = rf(modelPath, id, title, question, options, criteria)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewDecisionEdit creates a new instance of DecisionEdit. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewDecisionEdit(t interface {
	mock.TestingT
	Cleanup(func())
}) *DecisionEdit {
	mock := &DecisionEdit{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
