// Code generated by mockery v2.53.4. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// ConfigService is an autogenerated mock type for the ConfigService type
type ConfigService struct {
	mock.Mock
}

// GetAuthor provides a mock function with no fields
func (_m *ConfigService) GetAuthor() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetAuthor")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// GetCommentsHeader provides a mock function with no fields
func (_m *ConfigService) GetCommentsHeader() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetCommentsHeader")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// GetCriteriaHeader provides a mock function with no fields
func (_m *ConfigService) GetCriteriaHeader() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetCriteriaHeader")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// GetDefaultModelPath provides a mock function with no fields
func (_m *ConfigService) GetDefaultModelPath() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetDefaultModelPath")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// GetOptionsHeader provides a mock function with no fields
func (_m *ConfigService) GetOptionsHeader() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetOptionsHeader")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// GetOutcomeHeader provides a mock function with no fields
func (_m *ConfigService) GetOutcomeHeader() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetOutcomeHeader")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// GetQuestionHeader provides a mock function with no fields
func (_m *ConfigService) GetQuestionHeader() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetQuestionHeader")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// IsLoaded provides a mock function with no fields
func (_m *ConfigService) IsLoaded() bool {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for IsLoaded")
	}

	var r0 bool
	if rf, ok := ret.Get(0).(func() bool); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// ResetAll provides a mock function with no fields
func (_m *ConfigService) ResetAll() error {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for ResetAll")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// ResetTemplateHeaders provides a mock function with no fields
func (_m *ConfigService) ResetTemplateHeaders() error {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for ResetTemplateHeaders")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Save provides a mock function with given fields: question, criteria, options, comments, outcome, author, modelPath
func (_m *ConfigService) Save(question string, criteria string, options string, comments string, outcome string, author string, modelPath string) (string, error) {
	ret := _m.Called(question, criteria, options, comments, outcome, author, modelPath)

	if len(ret) == 0 {
		panic("no return value specified for Save")
	}

	var r0 string
	var r1 error
	if rf, ok := ret.Get(0).(func(string, string, string, string, string, string, string) (string, error)); ok {
		return rf(question, criteria, options, comments, outcome, author, modelPath)
	}
	if rf, ok := ret.Get(0).(func(string, string, string, string, string, string, string) string); ok {
		r0 = rf(question, criteria, options, comments, outcome, author, modelPath)
	} else {
		r0 = ret.Get(0).(string)
	}

	if rf, ok := ret.Get(1).(func(string, string, string, string, string, string, string) error); ok {
		r1 = rf(question, criteria, options, comments, outcome, author, modelPath)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SetConfigPath provides a mock function with given fields: customPath
func (_m *ConfigService) SetConfigPath(customPath string) error {
	ret := _m.Called(customPath)

	if len(ret) == 0 {
		panic("no return value specified for SetConfigPath")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(customPath)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewConfigService creates a new instance of ConfigService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewConfigService(t interface {
	mock.TestingT
	Cleanup(func())
}) *ConfigService {
	mock := &ConfigService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
